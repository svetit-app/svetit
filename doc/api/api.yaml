openapi: "3.0.0"
info:
  version: 1.0.0
  title: Svetit MS Project
  license:
    name: Apache-2.0
servers:
  - url: https://svetit-io/api
paths:
  /project/project/list:
    get:
      summary: List all projects
      operationId: handler-project-list-get
      tags:
        - main
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 1000)
          required: true
          schema:
            type: integer
            maximum: 1000
            format: int32
        - name: start
          in: query
          description: Offset position
          required: true
          schema:
            type: integer
            maximum: 999
            format: int32
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A paged array of projects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Projects"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /project/project:
    get:
      summary: Get one project
      operationId: handler-project-get
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Project identifier
          required: false
          schema:
            type: string
            format: uuid
        - name: key
          in: query
          description: Project key
          required: false
          schema:
            type: string
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A project object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a project
      operationId: handler-project-post
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update a project
      operationId: handler-project-patch
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      responses:
        '200':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete project
      operationId: handler-project-delete
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Project identifier
          required: true
          schema:
            type: string
            format: uuid
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A project object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /space/invitation:
    put:
      summary: Change role in invitation
      operationId: handler-space-invitation-put
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Invitation identifier
          required: true
          schema:
            format: int64
            type: integer
        - name: test
          in: query
          description: Invitation test
          required: false
          schema:
            format: date
            type: string
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Role"
        required: true
      responses:
        '200':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete invitation
      operationId: handler-space-invitation-delete
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Invitation identifier
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Project:
      type: object
      required:
        - spaceId
        - key
        - name
        - sync
      properties:
        id:
          type: string
          format: uuid
        spaceId:
          type: string
          format: uuid
        key:
          type: string
        name:
          type: string
        description:
          type: string
        changedAt:
          type: integer
          format: int64
        sync:
          type: string
          enum:
            - projectToNode
            - nodeToProject
    Projects:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/Project"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Role:
      type: object
      properties:
        role:
          type: string
          maxLength: 5
          minLength: 4
      required:
        - role