openapi: "3.0.0"
info:
  version: 1.0.0
  title: Svetit MS Project
  license:
    name: Apache-2.0
servers:
  - url: https://svetit-io/api
paths:
  /project/list:
    get:
      summary: List all projects
      operationId: handler-project-list-get
      tags:
        - main
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 1000)
          required: true
          schema:
            type: integer
            maximum: 1000
            format: int32
        - name: start
          in: query
          description: Offset position
          required: true
          schema:
            type: integer
            maximum: 999
            format: int32
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A paged array of projects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Projects"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/device-item/list:
    get:
      summary: List all device items
      operationId: handler-device-item-list-get
      tags:
        - main
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 1000)
          required: true
          schema:
            type: integer
            maximum: 1000
            format: int32
        - name: start
          in: query
          description: Offset position
          required: true
          schema:
            type: integer
            maximum: 999
            format: int32
        - name: deviceId
          in: query
          description: Device Id
          required: true
          schema:
            type: integer
            format: int64
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A paged array of device items
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceItems"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/cc-mode-type/list:
    get:
      summary: List all CC mode types
      operationId: handler-cc-mode-type-list-get
      tags:
        - main
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 1000)
          required: true
          schema:
            type: integer
            maximum: 1000
            format: int32
        - name: start
          in: query
          description: Offset position
          required: true
          schema:
            type: integer
            maximum: 999
            format: int32
        - name: ccTypeId
          in: query
          description: CC Type Id
          required: true
          schema:
            type: integer
            format: int64
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A paged array of CC mode types
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CcModeTypes"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/project:
    get:
      summary: Get one project
      operationId: handler-project-get
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Project identifier
          required: false
          schema:
            type: string
            format: uuid
        - name: key
          in: query
          description: Project key
          required: false
          schema:
            type: string
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A project object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a project
      operationId: handler-project-post
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update a project
      operationId: handler-project-patch
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              Project:
                type: object
                required:
                  - id
                  - spaceId
                  - key
                  - name
                  - sync
                properties:
                  id:
                    type: string
                    format: uuid
                  spaceId:
                    type: string
                    format: uuid
                  key:
                    type: string
                    maxLength: 32
                  name:
                    type: string
                    maxLength: 64
                  description:
                    type: string
                  changedAt:
                    type: integer
                    format: int64
                  sync:
                    type: string
                    enum:
                      - projectToNode
                      - nodeToProject
        required: true
      responses:
        '200':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete project
      operationId: handler-project-delete
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Project identifier
          required: true
          schema:
            type: string
            format: uuid
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A project object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/section:
    get:
      summary: Get one section
      operationId: handler-section-get
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Section identifier
          required: false
          schema:
            format: int64
            type: integer
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A section object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Section"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a section
      operationId: handler-section-post
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Section'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update a section
      operationId: handler-section-patch
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              Section:
                $ref: '#/components/schemas/Section'
        required: true
      responses:
        '204':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete section
      operationId: handler-section-delete
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Section identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/section/list:
    get:
      summary: List all sections
      operationId: handler-section-list-get
      tags:
        - main
      parameters:
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/startParam'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - name: projectId
          in: query
          description: projectId for filtering
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A paged array of value views
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Sections"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/cc-mode-type:
    get:
      summary: Get one Cc Mode Type
      operationId: handler-cc-mode-type-get
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Cc Mode type identifier
          required: false
          schema:
            format: int64
            type: integer
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A Cc Mode Type object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CcModeType"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a Cc Mode Type
      operationId: handler-cc-mode-type-post
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CcModeType'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update a Cc Mode Type
      operationId: handler-cc-mode-type-patch
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              Section:
                $ref: '#/components/schemas/CcModeType'
        required: true
      responses:
        '204':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete Cc Mode Type
      operationId: handler-cc-mode-type-delete
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Cc Mode Type identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/cc-status-category:
    get:
      summary: Get one Cc Status Category
      operationId: handler-cc-status-category-get
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Cc Status Category identifier
          required: false
          schema:
            format: int64
            type: integer
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A Cc Status Category object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CcStatusCategory"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a Cc Status Category
      operationId: handler-cc-status-category-post
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CcStatusCategory'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update a Cc Status Category
      operationId: handler-cc-status-category-patch
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              Section:
                $ref: '#/components/schemas/CcStatusCategory'
        required: true
      responses:
        '204':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete Cc Status Category
      operationId: handler-cc-status-category-delete
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Cc Status Category identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/cc-status-category/list:
    get:
      summary: List all CC status categories
      operationId: handler-cc-status-category-list-get
      tags:
        - main
      parameters:
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/startParam'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - name: projectId
          in: query
          description: projectId for filtering
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A paged array of CC status categories
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CcStatusCategories"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/cc-status-type:
    get:
      summary: Get one Cc Status Type
      operationId: handler-cc-status-type-get
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Cc Status Type identifier
          required: false
          schema:
            format: int64
            type: integer
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A Cc Status Type object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CcStatusType"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a Cc Status Type
      operationId: handler-cc-status-type-post
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CcStatusType'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update a Cc Status Type
      operationId: handler-cc-status-type-patch
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              Section:
                $ref: '#/components/schemas/CcStatusType'
        required: true
      responses:
        '204':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete Cc Status Type
      operationId: handler-cc-status-type-delete
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Cc Status Type identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/cc-status-type/list:
    get:
      summary: List all CC status types
      operationId: handler-cc-status-type-list-get
      tags:
        - main
      parameters:
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/startParam'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - name: ccTypeId
          in: query
          description: ccTypeId for filtering
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A paged array of CC status types
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CcStatusTypes"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/cc-type:
    get:
      summary: Get one Cc Type
      operationId: handler-cc-type-get
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Cc Type identifier
          required: false
          schema:
            format: int64
            type: integer
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A Cc Type object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CcType"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a Cc Type
      operationId: handler-cc-type-post
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CcType'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update a Cc Type
      operationId: handler-cc-type-patch
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              Section:
                $ref: '#/components/schemas/CcType'
        required: true
      responses:
        '204':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete Cc Type
      operationId: handler-cc-type-delete
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Cc Status identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/code:
    get:
      summary: Get one Code
      operationId: handler-code-get
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Code identifier
          required: false
          schema:
            format: int64
            type: integer
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A Code object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Code"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a Code
      operationId: handler-code-post
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Code'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update a Code
      operationId: handler-code-patch
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              Section:
                $ref: '#/components/schemas/Code'
        required: true
      responses:
        '204':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete Code
      operationId: handler-code-delete
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: A Code identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/code/list:
    get:
      summary: List all codes
      operationId: handler-code-list-get
      tags:
        - main
      parameters:
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/startParam'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - name: projectId
          in: query
          description: projectId for filtering
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A paged array of codes
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Codes"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/control-circuit:
    get:
      summary: Get one Control Circuit
      operationId: handler-control-circuit-get
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Control Circuit identifier
          required: false
          schema:
            format: int64
            type: integer
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A Control Circuit object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlCircuit"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a Control Circuit
      operationId: handler-control-circuit-post
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ControlCircuit'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update a Control Circuit
      operationId: handler-control-circuit-patch
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              Section:
                $ref: '#/components/schemas/ControlCircuit'
        required: true
      responses:
        '204':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete Control Circuit
      operationId: handler-control-circuit-delete
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: A Control Circuit identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/control-circuit/list:
    get:
      summary: List all control circuits
      operationId: handler-control-circuit-list-get
      tags:
        - main
      parameters:
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/startParam'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - name: sectionId
          in: query
          description: sectionId for filtering
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A paged array of control circuits
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlCircuits"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/device-item:
    get:
      summary: Get one Device Item
      operationId: handler-device-item-get
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Device Item identifier
          required: false
          schema:
            format: int64
            type: integer
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A Device Item object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceItem"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a Device Item
      operationId: handler-device-item-post
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceItem'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update a Device Item
      operationId: handler-device-item-patch
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              Section:
                $ref: '#/components/schemas/DeviceItem'
        required: true
      responses:
        '204':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete Device Item
      operationId: handler-device-item-delete
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Device Item identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/device:
    get:
      summary: Get one Device
      operationId: handler-device-get
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Device identifier
          required: false
          schema:
            format: int64
            type: integer
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A Device object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Device"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a Device
      operationId: handler-device-post
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update a Device
      operationId: handler-device-patch
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              Section:
                $ref: '#/components/schemas/Device'
        required: true
      responses:
        '204':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete Device
      operationId: handler-device-delete
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Device identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/device/list:
    get:
      summary: List all devices
      operationId: handler-device-list-get
      tags:
        - main
      parameters:
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/startParam'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - name: projectId
          in: query
          description: projectId for filtering
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A paged array of devices
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Devices"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/di-type:
    get:
      summary: Get one Di Type
      operationId: handler-di-type-get
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Di Type identifier
          required: false
          schema:
            format: int64
            type: integer
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A Di Type object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiType"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a Di Type
      operationId: handler-di-type-post
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiType'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update a Di Type
      operationId: handler-di-type-patch
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              Section:
                $ref: '#/components/schemas/DiType'
        required: true
      responses:
        '204':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete Di Type
      operationId: handler-di-type-delete
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Di Type identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/di-type/list:
    get:
      summary: List all di types
      operationId: handler-di-type-list-get
      tags:
        - main
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 1000)
          required: true
          schema:
            type: integer
            maximum: 1000
            format: int32
        - name: start
          in: query
          description: Offset position
          required: true
          schema:
            type: integer
            maximum: 999
            format: int32
        - name: projectId
          in: query
          description: ProjectId for filtering
          required: true
          schema:
            type: string
            format: uuid
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A paged array of Di Types
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiTypes"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/measure:
    get:
      summary: Get one Measure
      operationId: handler-measure-get
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Measure identifier
          required: false
          schema:
            format: int64
            type: integer
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A Measure object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Measure"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a Measure
      operationId: handler-measure-post
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Measure'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update a Measure
      operationId: handler-measure-patch
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              Section:
                $ref: '#/components/schemas/Measure'
        required: true
      responses:
        '204':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete Measure
      operationId: handler-measure-delete
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Measure identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/measure/list:
    get:
      summary: List all measures
      operationId: handler-measure-list-get
      tags:
        - main
      parameters:
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/startParam'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - name: projectId
          in: query
          description: projectId for filtering
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A paged array of measures
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Measures"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/plugin:
    get:
      summary: Get one Plugin
      operationId: handler-plugin-get
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Plugin identifier
          required: false
          schema:
            format: int64
            type: integer
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A Plugin object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Plugin"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a Plugin
      operationId: handler-plugin-post
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update a Plugin
      operationId: handler-plugin-patch
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              Section:
                $ref: '#/components/schemas/Plugin'
        required: true
      responses:
        '204':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete Plugin
      operationId: handler-plugin-delete
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Plugin identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/plugin/list:
    get:
      summary: List all plugins
      operationId: handler-plugin-list-get
      tags:
        - main
      parameters:
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/startParam'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - name: projectId
          in: query
          description: projectId for filtering
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A paged array of plugins
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Plugins"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/save-timer:
    get:
      summary: Get one Save Timer
      operationId: handler-save-timer-get
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Save Timer identifier
          required: false
          schema:
            format: int64
            type: integer
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A Save Timer object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SaveTimer"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a Save Timer
      operationId: handler-save-timer-post
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveTimer'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update a Save Timer
      operationId: handler-save-timer-patch
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              Section:
                $ref: '#/components/schemas/SaveTimer'
        required: true
      responses:
        '204':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete Save Timer
      operationId: handler-save-timer-delete
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Save Timer identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/save-timer/list:
    get:
      summary: List all save timers
      operationId: handler-save-timer-list-get
      tags:
        - main
      parameters:
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/startParam'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - name: projectId
          in: query
          description: projectId for filtering
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A paged array of save timers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SaveTimers"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/translation:
    get:
      summary: Get one Translation
      operationId: handler-translation-get
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Translation identifier
          required: false
          schema:
            format: int64
            type: integer
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A Translation object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Translation"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a Translation
      operationId: handler-translation-post
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Translation'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update a Translation
      operationId: handler-translation-patch
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              Section:
                $ref: '#/components/schemas/Translation'
        required: true
      responses:
        '204':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete Translation
      operationId: handler-translation-delete
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Translation identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/value-view/list:
    get:
      summary: List all value views
      operationId: handler-value-view-list-get
      tags:
        - main
      parameters:
        - $ref: '#/components/parameters/limitParam'
        - name: start
          in: query
          description: Offset position
          required: true
          schema:
            type: integer
            maximum: 999
            format: int32
        - name: diTypeId
          in: query
          description: diTypeId for filtering
          required: true
          schema:
            type: integer
            format: int64
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A paged array of value views
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValueViews"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/value-view:
    get:
      summary: Get one Value View
      operationId: handler-value-view-get
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Value View identifier
          required: false
          schema:
            format: int64
            type: integer
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A Value View object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValueView"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a Value View
      operationId: handler-value-view-post
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValueView'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update a Value View
      operationId: handler-value-view-patch
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              Section:
                $ref: '#/components/schemas/ValueView'
        required: true
      responses:
        '204':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete Value View
      operationId: handler-value-view-delete
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Value View identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/translation/list:
    get:
      summary: List all translations
      operationId: handler-translation-list-get
      tags:
        - main
      parameters:
        - $ref: '#/components/parameters/limitParam'
        - name: start
          in: query
          description: Offset position
          required: true
          schema:
            type: integer
            maximum: 999
            format: int32
        - name: projectId
          in: query
          description: projectId for filtering
          required: true
          schema:
            type: string
            format: uuid
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A paged array of value views
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Translations"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /project/param-type:
    get:
      summary: Get one param-type
      operationId: handler-param-type-get
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Param type identifier
          required: false
          schema:
            format: int64
            type: integer
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A param type object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParamType"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a param type
      operationId: handler-param-type-post
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParamType'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update a param type
      operationId: handler-param-type-patch
      tags:
        - main
      parameters:
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              Section:
                $ref: '#/components/schemas/ParamType'
        required: true
      responses:
        '204':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete param type
      operationId: handler-param-type-delete
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Param identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /space/invitation:
    put:
      summary: Change role in invitation
      operationId: handler-space-invitation-put
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Invitation identifier
          required: true
          schema:
            format: int64
            type: integer
        - name: test
          in: query
          description: Invitation test
          required: false
          schema:
            format: date
            type: string
        - name: X-User
          in: header
          description: Authorized user
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Role"
        required: true
      responses:
        '200':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete invitation
      operationId: handler-space-invitation-delete
      tags:
        - main
      parameters:
        - name: id
          in: query
          description: Invitation identifier
          required: true
          schema:
            format: int64
            type: integer
        - name: X-Space-Id
          in: header
          description: Current Space Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  parameters:
    limitParam:
      name: limit
      in: query
      description: How many items to return at one time (max 1000)
      required: true
      schema:
        type: integer
        maximum: 1000
        format: int32
    startParam:
      name: start
      in: query
      description: Offset position
      required: true
      schema:
        type: integer
        maximum: 999
        format: int32
    XUserHeader:
      name: X-User
      in: header
      description: Authorized user
      required: true
      schema:
        type: string
        format: uuid
    XSpaceIdHeader:
      name: X-Space-Id
      in: header
      description: Current Space Id
      required: true
      schema:
        type: string
        format: uuid
  schemas:
    Project:
      type: object
      required:
        - spaceId
        - key
        - name
        - sync
      properties:
        id:
          type: string
          format: uuid
        spaceId:
          type: string
          format: uuid
        key:
          type: string
          maxLength: 32
        name:
          type: string
          maxLength: 64
        description:
          type: string
        changedAt:
          type: integer
          format: int64
        sync:
          type: string
          enum:
            - projectToNode
            - nodeToProject

    Projects:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/Project"

    DiTypes:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/DiType"

    DeviceItems:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/DeviceItem"

    CcModeTypes:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/CcModeType"

    ValueViews:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/ValueView"

    Translations:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/Translation"

    Sections:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/Section"

    SaveTimers:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/SaveTimer"

    Plugins:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/Plugin"

    Measures:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/Measure"

    Devices:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/Device"

    ControlCircuits:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/ControlCircuit"

    Codes:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/Code"

    CcStatusTypes:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/CcStatusType"

    CcStatusCategories:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/CcStatusCategory"

    Section:
      type: object
      required:
        - projectId
        - name
      properties:
        id:
          type: integer
          format: int64
        projectId:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 64

    CcModeType:
      type: object
      required:
        - ccTypeId
        - key
        - name
      properties:
        id:
          type: integer
          format: int64
        ccTypeId:
          type: integer
          format: int64
        key:
          type: string
          maxLength: 64
        name:
          type: string
          maxLength: 64

    CcStatusCategory:
      type: object
      required:
        - projectId
        - key
        - name
        - color
      properties:
        id:
          type: integer
          format: int64
        projectId:
          type: string
          format: uuid
        key:
          type: string
          maxLength: 64
        name:
          type: string
          maxLength: 64
        color:
          type: string
          maxLength: 16

    CcStatusType:
      type: object
      required:
        - ccTypeId
        - categoryId
        - key
        - text
        - inform
      properties:
        id:
          type: integer
          format: int64
        ccTypeId:
          type: integer
          format: int64
        categoryId:
          type: integer
          format: int64
        key:
          type: string
          maxLength: 64
        text:
          type: string
          maxLength: 512
        inform:
          type: boolean

    CcType:
      type: object
      required:
        - projectId
        - key
        - name
        - description
      properties:
        id:
          type: integer
          format: int64
        projectId:
          type: string
          format: uuid
        key:
          type: string
          maxLength: 64
        name:
          type: string
          maxLength: 64
        description:
          type: string

    Code:
      type: object
      required:
        - projectId
        - repositoryId
        - commitHash
      properties:
        id:
          type: integer
          format: int64
        projectId:
          type: string
          format: uuid
        repositoryId:
          type: string
          format: uuid
        commitHash:
          type: string

    ControlCircuit:
      type: object
      required:
        - typeId
        - sectionId
        - name
      properties:
        id:
          type: integer
          format: int64
        typeId:
          type: integer
          format: int64
        sectionId:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 64

    DeviceItem:
      type: object
      required:
        - deviceId
        - typeId
        - name
      properties:
        id:
          type: integer
          format: int64
        deviceId:
          type: integer
          format: int64
        typeId:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 64

    Device:
      type: object
      required:
        - projectId
        - pluginId
        - name
        - checkIntervalMsec
      properties:
        id:
          type: integer
          format: int64
        projectId:
          type: string
          format: uuid
        pluginId:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 64
        checkIntervalMsec:
          type: integer
          format: int32

    DiType:
      type: object
      required:
        - measureId
        - saveTimerId
        - key
        - name
        - mode
        - saveAlgorithm
      properties:
        id:
          type: integer
          format: int64
        measureId:
          type: integer
          format: int64
        saveTimerId:
          type: integer
          format: int64
        key:
          type: string
          maxLength: 64
        name:
          type: string
          maxLength: 64
        mode:
          type: string
          enum:
            - readonlyFlag
            - readwriteFlag
            - readonly
            - readwrite
            - file
            - button
            - videoStream
        saveAlgorithm:
          type: string
          enum:
            - 'off'
            - immediately
            - byTimer
            - byTimerOrImmediately

    Measure:
      type: object
      required:
        - projectId
        - name
      properties:
        id:
          type: integer
          format: int64
        projectId:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 10

    Plugin:
      type: object
      required:
        - projectId
        - name
        - description
        - key
      properties:
        id:
          type: integer
          format: int64
        projectId:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 64
        description:
          type: string
        key:
          type: string
          maxLength: 128

    SaveTimer:
      type: object
      required:
        - projectId
        - intervalMsec
      properties:
        id:
          type: integer
          format: int64
        projectId:
          type: string
          format: uuid
        intervalMsec:
          type: integer
          format: int32

    Translation:
      type: object
      required:
        - projectId
        - lang
        - key
        - value
      properties:
        id:
          type: integer
          format: int64
        projectId:
          type: string
          format: uuid
        lang:
          type: string
          maxLength: 64
        key:
          type: string
          maxLength: 64
        value:
          type: string

    ValueView:
      type: object
      required:
        - diTypeId
        - value
        - view
      properties:
        id:
          type: integer
          format: int64
        diTypeId:
          type: integer
          format: int64
        value:
          type: string
        view:
          type: string

    ParamType:
      type: object
      required:
        - parentId
        - key
        - name
        - description
        - valueType
      properties:
        id:
          type: integer
          format: int64
        parentId:
          type: string
          nullable: true
          format: uuid
        key:
          type: string
          maxLength: 64
        name:
          type: string
          maxLength: 64
        description:
          type: string
          maxLength: 512
        valueType:
          type: string
          enum:
            - int
            - bool
            - float
            - string
            - bytes
            - time
            - range
            - combo
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Role:
      type: object
      properties:
        role:
          type: string
          maxLength: 5
          minLength: 4
      required:
        - role