openapi: '3.0.0'
info:
  version: 1.0.0
  title: Svetit MS Project
  license:
    name: Apache-2.0
servers:
  - url: https://svetit-io/api
paths:
  /project/project:
    get:
      summary: Get one project
      operationId: handler-project-get
      tags:
        - project
      parameters:
        - name: id
          in: query
          description: Project identifier
          required: false
          schema:
            type: string
            format: uuid
        - name: key
          in: query
          description: Project key
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '200':
          $ref: '#/components/responses/Project'
        '500':
          $ref: '#/components/responses/Error500'
    post:
      summary: Create a project
      operationId: handler-project-post
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Created201'
        '500':
          $ref: '#/components/responses/Error500'
    patch:
      summary: Update a project
      operationId: handler-project-patch
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete project
      operationId: handler-project-delete
      tags:
        - project
      parameters:
        - name: id
          in: query
          description: Project identifier
          required: true
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'

  /project/list:
    get:
      summary: List all projects
      operationId: handler-project-list-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '200':
          $ref: '#/components/responses/Projects'
        '500':
          $ref: '#/components/responses/Error500'

  /project/project-param:
    get:
      summary: Get one Project Param
      operationId: handler-project-param-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/projectIdRequired'
        - $ref: '#/components/parameters/paramId'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '200':
          $ref: '#/components/responses/ProjectParam'
        '500':
          $ref: '#/components/responses/Error500'
    post:
      summary: Create a Project Param
      operationId: handler-project-param-post
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectParam'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Created201'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete Project Param
      operationId: handler-project-param-delete
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/projectIdRequired'
        - $ref: '#/components/parameters/paramId'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'

  /project/project-param/list:
    get:
      summary: List all Project Params
      operationId: handler-project-param-list-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
        - $ref: '#/components/parameters/projectIdRequired'
      responses:
        '200':
          $ref: '#/components/responses/ProjectParams'
        '500':
          $ref: '#/components/responses/Error500'

  /project/section:
    get:
      summary: Get one section
      operationId: handler-section-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '200':
          $ref: '#/components/responses/Section'
        '500':
          $ref: '#/components/responses/Error500'
    post:
      summary: Create a section
      operationId: handler-section-post
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Section'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Created201'
        '500':
          $ref: '#/components/responses/Error500'
    patch:
      summary: Update a section
      operationId: handler-section-patch
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Section'
        required: true
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete section
      operationId: handler-section-delete
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'

  /project/section/list:
    get:
      summary: List all sections
      operationId: handler-section-list-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
        - $ref: '#/components/parameters/projectIdRequired'
      responses:
        '200':
          $ref: '#/components/responses/Sections'
        '500':
          $ref: '#/components/responses/Error500'

  /project/section-param:
    get:
      summary: Get one Section Param
      operationId: handler-section-param-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/sectionId'
        - $ref: '#/components/parameters/paramId'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '200':
          $ref: '#/components/responses/SectionParam'
        '500':
          $ref: '#/components/responses/Error500'
    post:
      summary: Create a Section Param
      operationId: handler-section-param-post
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SectionParam'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Created201'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete Section Param
      operationId: handler-section-param-delete
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/sectionId'
        - $ref: '#/components/parameters/paramId'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'

  /project/section-param/list:
    get:
      summary: List all Section Params
      operationId: handler-section-param-list-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
        - $ref: '#/components/parameters/sectionId'
      responses:
        '200':
          $ref: '#/components/responses/SectionParams'
        '500':
          $ref: '#/components/responses/Error500'

  /project/cc-mode-type:
    get:
      summary: Get one Cc Mode Type
      operationId: handler-cc-mode-type-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '200':
          $ref: '#/components/responses/CcModeType'
        '500':
          $ref: '#/components/responses/Error500'
    post:
      summary: Create a Cc Mode Type
      operationId: handler-cc-mode-type-post
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CcModeType'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Created201'
        '500':
          $ref: '#/components/responses/Error500'
    patch:
      summary: Update a Cc Mode Type
      operationId: handler-cc-mode-type-patch
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CcModeType'
        required: true
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete Cc Mode Type
      operationId: handler-cc-mode-type-delete
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'

  /project/cc-mode-type/list:
    get:
      summary: List all CC mode types
      operationId: handler-cc-mode-type-list-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
        - name: ccTypeId
          in: query
          description: CC Type Id for filtering
          required: false
          schema:
            type: integer
            format: int64
        - name: projectId
          in: query
          description: ProjectId for filtering
          required: false
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/CcModeTypes'
        '500':
          $ref: '#/components/responses/Error500'

  /project/cc-status-category:
    get:
      summary: Get one Cc Status Category
      operationId: handler-cc-status-category-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '200':
          $ref: '#/components/responses/CcStatusCategory'
        '500':
          $ref: '#/components/responses/Error500'
    post:
      summary: Create a Cc Status Category
      operationId: handler-cc-status-category-post
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CcStatusCategory'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Created201'
        '500':
          $ref: '#/components/responses/Error500'
    patch:
      summary: Update a Cc Status Category
      operationId: handler-cc-status-category-patch
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CcStatusCategory'
        required: true
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete Cc Status Category
      operationId: handler-cc-status-category-delete
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'

  /project/cc-status-category/list:
    get:
      summary: List all CC status categories
      operationId: handler-cc-status-category-list-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
        - $ref: '#/components/parameters/projectIdRequired'
      responses:
        '200':
          $ref: '#/components/responses/CcStatusCategories'
        '500':
          $ref: '#/components/responses/Error500'

  /project/cc-status-type:
    get:
      summary: Get one Cc Status Type
      operationId: handler-cc-status-type-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '200':
          $ref: '#/components/responses/CcStatusType'
        '500':
          $ref: '#/components/responses/Error500'
    post:
      summary: Create a Cc Status Type
      operationId: handler-cc-status-type-post
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CcStatusType'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Created201'
        '500':
          $ref: '#/components/responses/Error500'
    patch:
      summary: Update a Cc Status Type
      operationId: handler-cc-status-type-patch
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CcStatusType'
        required: true
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete Cc Status Type
      operationId: handler-cc-status-type-delete
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'

  /project/cc-status-type/list:
    get:
      summary: List all CC status types
      operationId: handler-cc-status-type-list-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
        - $ref: '#/components/parameters/ccTypeId'
      responses:
        '200':
          $ref: '#/components/responses/CcStatusTypes'
        '500':
          $ref: '#/components/responses/Error500'

  /project/cc-type:
    get:
      summary: Get one Cc Type
      operationId: handler-cc-type-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '200':
          $ref: '#/components/responses/CcType'
        '500':
          $ref: '#/components/responses/Error500'
    post:
      summary: Create a Cc Type
      operationId: handler-cc-type-post
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CcType'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Created201'
        '500':
          $ref: '#/components/responses/Error500'
    patch:
      summary: Update a Cc Type
      operationId: handler-cc-type-patch
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CcType'
        required: true
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete Cc Type
      operationId: handler-cc-type-delete
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'

  /project/cc-type/list:
    get:
      summary: List all CC types
      operationId: handler-cc-type-list-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
        - $ref: '#/components/parameters/projectIdRequired'
      responses:
        '200':
          $ref: '#/components/responses/CcTypes'
        '500':
          $ref: '#/components/responses/Error500'

  /project/code:
    get:
      summary: Get one Code
      operationId: handler-code-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '200':
          $ref: '#/components/responses/Code'
        '500':
          $ref: '#/components/responses/Error500'
    post:
      summary: Create a Code
      operationId: handler-code-post
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Code'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Created201'
        '500':
          $ref: '#/components/responses/Error500'
    patch:
      summary: Update a Code
      operationId: handler-code-patch
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Code'
        required: true
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete Code
      operationId: handler-code-delete
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'

  /project/code/list:
    get:
      summary: List all codes
      operationId: handler-code-list-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
        - $ref: '#/components/parameters/projectIdRequired'
      responses:
        '200':
          $ref: '#/components/responses/Codes'
        '500':
          $ref: '#/components/responses/Error500'

  /project/control-circuit:
    get:
      summary: Get one Control Circuit
      operationId: handler-control-circuit-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '200':
          $ref: '#/components/responses/ControlCircuit'
        '500':
          $ref: '#/components/responses/Error500'
    post:
      summary: Create a Control Circuit
      operationId: handler-control-circuit-post
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ControlCircuit'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Created201'
        '500':
          $ref: '#/components/responses/Error500'
    patch:
      summary: Update a Control Circuit
      operationId: handler-control-circuit-patch
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ControlCircuit'
        required: true
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete Control Circuit
      operationId: handler-control-circuit-delete
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'

  /project/control-circuit/list:
    get:
      summary: List all control circuits
      operationId: handler-control-circuit-list-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
        - $ref: '#/components/parameters/sectionId'
      responses:
        '200':
          $ref: '#/components/responses/ControlCircuits'
        '500':
          $ref: '#/components/responses/Error500'

  /project/device-item:
    get:
      summary: Get one Device Item
      operationId: handler-device-item-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '200':
          $ref: '#/components/responses/DeviceItem'
        '500':
          $ref: '#/components/responses/Error500'
    post:
      summary: Create a Device Item
      operationId: handler-device-item-post
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceItem'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Created201'
        '500':
          $ref: '#/components/responses/Error500'
    patch:
      summary: Update a Device Item
      operationId: handler-device-item-patch
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceItem'
        required: true
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete Device Item
      operationId: handler-device-item-delete
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'

  /project/device-item/list:
    get:
      summary: List all device items
      operationId: handler-device-item-list-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
        - $ref: '#/components/parameters/deviceId'
      responses:
        '200':
          $ref: '#/components/responses/DeviceItems'
        '500':
          $ref: '#/components/responses/Error500'

  /project/device:
    get:
      summary: Get one Device
      operationId: handler-device-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '200':
          $ref: '#/components/responses/Device'
        '500':
          $ref: '#/components/responses/Error500'
    post:
      summary: Create a Device
      operationId: handler-device-post
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Created201'
        '500':
          $ref: '#/components/responses/Error500'
    patch:
      summary: Update a Device
      operationId: handler-device-patch
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
        required: true
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete Device
      operationId: handler-device-delete
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'

  /project/device/list:
    get:
      summary: List all devices
      operationId: handler-device-list-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
        - $ref: '#/components/parameters/projectIdRequired'
      responses:
        '200':
          $ref: '#/components/responses/Devices'
        '500':
          $ref: '#/components/responses/Error500'

  /project/di-type:
    get:
      summary: Get one Di Type
      operationId: handler-di-type-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '200':
          $ref: '#/components/responses/DiType'
        '500':
          $ref: '#/components/responses/Error500'
    post:
      summary: Create a Di Type
      operationId: handler-di-type-post
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiType'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Created201'
        '500':
          $ref: '#/components/responses/Error500'
    patch:
      summary: Update a Di Type
      operationId: handler-di-type-patch
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiType'
        required: true
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete Di Type
      operationId: handler-di-type-delete
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'

  /project/di-type/list:
    get:
      summary: List all di types
      operationId: handler-di-type-list-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
        - $ref: '#/components/parameters/projectIdRequired'
      responses:
        '200':
          $ref: '#/components/responses/DiTypes'
        '500':
          $ref: '#/components/responses/Error500'

  /project/measure:
    get:
      summary: Get one Measure
      operationId: handler-measure-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '200':
          $ref: '#/components/responses/Measure'
        '500':
          $ref: '#/components/responses/Error500'
    post:
      summary: Create a Measure
      operationId: handler-measure-post
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Measure'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Created201'
        '500':
          $ref: '#/components/responses/Error500'
    patch:
      summary: Update a Measure
      operationId: handler-measure-patch
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Measure'
        required: true
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete Measure
      operationId: handler-measure-delete
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'

  /project/measure/list:
    get:
      summary: List all measures
      operationId: handler-measure-list-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
        - $ref: '#/components/parameters/projectIdRequired'
      responses:
        '200':
          $ref: '#/components/responses/Measures'
        '500':
          $ref: '#/components/responses/Error500'

  /project/plugin:
    get:
      summary: Get one Plugin
      operationId: handler-plugin-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '200':
          $ref: '#/components/responses/Plugin'
        '500':
          $ref: '#/components/responses/Error500'
    post:
      summary: Create a Plugin
      operationId: handler-plugin-post
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Created201'
        '500':
          $ref: '#/components/responses/Error500'
    patch:
      summary: Update a Plugin
      operationId: handler-plugin-patch
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin'
        required: true
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete Plugin
      operationId: handler-plugin-delete
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'

  /project/plugin/list:
    get:
      summary: List all plugins
      operationId: handler-plugin-list-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
        - $ref: '#/components/parameters/projectIdRequired'
      responses:
        '200':
          $ref: '#/components/responses/Plugins'
        '500':
          $ref: '#/components/responses/Error500'

  /project/save-timer:
    get:
      summary: Get one Save Timer
      operationId: handler-save-timer-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '200':
          $ref: '#/components/responses/SaveTimer'
        '500':
          $ref: '#/components/responses/Error500'
    post:
      summary: Create a Save Timer
      operationId: handler-save-timer-post
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveTimer'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Created201'
        '500':
          $ref: '#/components/responses/Error500'
    patch:
      summary: Update a Save Timer
      operationId: handler-save-timer-patch
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveTimer'
        required: true
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete Save Timer
      operationId: handler-save-timer-delete
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'

  /project/save-timer/list:
    get:
      summary: List all save timers
      operationId: handler-save-timer-list-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
        - $ref: '#/components/parameters/projectIdRequired'
      responses:
        '200':
          $ref: '#/components/responses/SaveTimers'
        '500':
          $ref: '#/components/responses/Error500'

  /project/translation:
    get:
      summary: Get one Translation
      operationId: handler-translation-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '200':
          $ref: '#/components/responses/Translation'
        '500':
          $ref: '#/components/responses/Error500'
    post:
      summary: Create a Translation
      operationId: handler-translation-post
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Translation'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Created201'
        '500':
          $ref: '#/components/responses/Error500'
    patch:
      summary: Update a Translation
      operationId: handler-translation-patch
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Translation'
        required: true
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete Translation
      operationId: handler-translation-delete
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'

  /project/translation/list:
    get:
      summary: List all translations
      operationId: handler-translation-list-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
        - $ref: '#/components/parameters/projectIdRequired'
      responses:
        '200':
          $ref: '#/components/responses/Translations'
        '500':
          $ref: '#/components/responses/Error500'

  /project/value-view:
    get:
      summary: Get one Value View
      operationId: handler-value-view-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '200':
          $ref: '#/components/responses/ValueView'
        '500':
          $ref: '#/components/responses/Error500'
    post:
      summary: Create a Value View
      operationId: handler-value-view-post
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValueView'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Created201'
        '500':
          $ref: '#/components/responses/Error500'
    patch:
      summary: Update a Value View
      operationId: handler-value-view-patch
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValueView'
        required: true
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete Value View
      operationId: handler-value-view-delete
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'

  /project/value-view/list:
    get:
      summary: List all value views
      operationId: handler-value-view-list-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/diTypeId'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '200':
          $ref: '#/components/responses/ValueViews'
        '500':
          $ref: '#/components/responses/Error500'

  /project/param-type:
    get:
      summary: Get one param-type
      operationId: handler-param-type-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '200':
          $ref: '#/components/responses/ParamType'
        '500':
          $ref: '#/components/responses/Error500'
    post:
      summary: Create a param type
      operationId: handler-param-type-post
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParamType'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Created201'
        '500':
          $ref: '#/components/responses/Error500'
    patch:
      summary: Update a param type
      operationId: handler-param-type-patch
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParamType'
        required: true
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete param type
      operationId: handler-param-type-delete
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/idBigintRequired'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'

  /project/param-type/list:
    get:
      summary: List all param types
      operationId: handler-param-type-list-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
        - $ref: '#/components/parameters/projectIdRequired'
      responses:
        '200':
          $ref: '#/components/responses/ParamTypes'
        '500':
          $ref: '#/components/responses/Error500'

  /project/cc-di:
    get:
      summary: Get one Cc Di
      operationId: handler-cc-di-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/ccId'
        - $ref: '#/components/parameters/diId'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '200':
          $ref: '#/components/responses/CcDi'
        '500':
          $ref: '#/components/responses/Error500'
    post:
      summary: Create a Cc Di
      operationId: handler-cc-di-post
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CcDi'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Created201'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete Cc Di
      operationId: handler-cc-di-delete
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/ccId'
        - $ref: '#/components/parameters/diId'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'

  /project/cc-di/list:
    get:
      summary: List all Cc Dis
      operationId: handler-cc-di-list-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
        - $ref: '#/components/parameters/ccId'
      responses:
        '200':
          $ref: '#/components/responses/CcDis'
        '500':
          $ref: '#/components/responses/Error500'

  /project/cc-param:
    get:
      summary: Get one Cc Param
      operationId: handler-cc-param-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/ccId'
        - $ref: '#/components/parameters/paramId'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '200':
          $ref: '#/components/responses/CcParam'
        '500':
          $ref: '#/components/responses/Error500'
    post:
      summary: Create a Cc Param
      operationId: handler-cc-param-post
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CcParam'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Created201'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete Cc Param
      operationId: handler-cc-param-delete
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/ccId'
        - $ref: '#/components/parameters/paramId'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'

  /project/cc-param/list:
    get:
      summary: List all Cc Params
      operationId: handler-cc-param-list-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
        - $ref: '#/components/parameters/ccId'
      responses:
        '200':
          $ref: '#/components/responses/CcParams'
        '500':
          $ref: '#/components/responses/Error500'

  /project/cc-type-di-type:
    get:
      summary: Get one Cc Type Di Type
      operationId: handler-cc-type-di-type-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/ccTypeId'
        - $ref: '#/components/parameters/diTypeId'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '200':
          $ref: '#/components/responses/CcTypeDiType'
        '500':
          $ref: '#/components/responses/Error500'
    post:
      summary: Create a Cc Type Di Type
      operationId: handler-cc-type-di-type-post
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CcTypeDiType'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Created201'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete Cc Type Di Type
      operationId: handler-cc-type-di-type-delete
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/ccTypeId'
        - $ref: '#/components/parameters/diTypeId'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'

  /project/cc-type-di-type/list:
    get:
      summary: List all Cc Type Di Types
      operationId: handler-cc-type-di-type-list-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
        - $ref: '#/components/parameters/ccTypeId'
      responses:
        '200':
          $ref: '#/components/responses/CcTypeDiTypes'
        '500':
          $ref: '#/components/responses/Error500'

  /project/cc-type-param:
    get:
      summary: Get one Cc Type Param
      operationId: handler-cc-type-param-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/ccTypeId'
        - $ref: '#/components/parameters/paramId'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '200':
          $ref: '#/components/responses/CcTypeParam'
        '500':
          $ref: '#/components/responses/Error500'
    post:
      summary: Create a Cc Type Param
      operationId: handler-cc-type-param-post
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CcTypeParam'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Created201'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete Cc Type Param
      operationId: handler-cc-type-param-delete
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/ccTypeId'
        - $ref: '#/components/parameters/paramId'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'

  /project/cc-type-param/list:
    get:
      summary: List all Cc Type Param
      operationId: handler-cc-type-param-list-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
        - $ref: '#/components/parameters/ccTypeId'
      responses:
        '200':
          $ref: '#/components/responses/CcTypeParams'
        '500':
          $ref: '#/components/responses/Error500'

  /project/device-plugin-param:
    get:
      summary: Get one Device Plugin Param
      operationId: handler-device-plugin-param-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/deviceId'
        - $ref: '#/components/parameters/paramId'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '200':
          $ref: '#/components/responses/DevicePluginParam'
        '500':
          $ref: '#/components/responses/Error500'
    post:
      summary: Create a Device Plugin Param
      operationId: handler-device-plugin-param-post
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevicePluginParam'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Created201'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete Device Plugin Param
      operationId: handler-device-plugin-param-delete
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/deviceId'
        - $ref: '#/components/parameters/paramId'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'

  /project/device-plugin-param/list:
    get:
      summary: List all Device Plugin Param
      operationId: handler-device-plugin-param-list-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
        - $ref: '#/components/parameters/deviceId'
      responses:
        '200':
          $ref: '#/components/responses/CcTypeParam'
        '500':
          $ref: '#/components/responses/Error500'

  /project/di-plugin-param:
    get:
      summary: Get one DI Plugin Param
      operationId: handler-di-plugin-param-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/diTypeId'
        - $ref: '#/components/parameters/paramId'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '200':
          $ref: '#/components/responses/DiPluginParam'
        '500':
          $ref: '#/components/responses/Error500'
    post:
      summary: Create a DI Plugin Param
      operationId: handler-di-plugin-param-post
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiPluginParam'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Created201'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete DI Plugin Param
      operationId: handler-di-plugin-param-delete
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/diTypeId'
        - $ref: '#/components/parameters/paramId'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'

  /project/di-plugin-param/list:
    get:
      summary: List all DI Plugin Param
      operationId: handler-di-plugin-param-list-get
      tags:
        - project
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XSpaceIdHeader'
        - $ref: '#/components/parameters/XSpaceRoleHeader'
        - $ref: '#/components/parameters/diTypeId'
      responses:
        '200':
          $ref: '#/components/responses/DiPluginParams'
        '500':
          $ref: '#/components/responses/Error500'
  /auth/token/refresh:
    post:
      summary: Refresh tokens
      operationId: handler-token-refresh-post
      tags:
        - auth
      parameters:
        - $ref: '#/components/parameters/XSessionHeader'
        - $ref: '#/components/parameters/UserAgentHeader'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '401':
          $ref: '#/components/responses/NotAuthorized401'

  /auth/login:
    get:
      summary: Redirect to login url
      operationId: handler-login-get
      tags:
        - auth
      parameters:
        - $ref: '#/components/parameters/redirectPath'
        - $ref: '#/components/parameters/RefererHeader'
        - $ref: '#/components/parameters/XForwardedProtoHeader'
        - $ref: '#/components/parameters/XForwardedHostHeader'
        - $ref: '#/components/parameters/XApiPrefixHeader'
      responses:
        '302':
          $ref: '#/components/responses/Found302'
  /auth/logout:
    get:
      summary: Redirect to logout url
      operationId: handler-logout-get
      tags:
        - auth
      parameters:
        - $ref: '#/components/parameters/XForwardedProtoHeader'
        - $ref: '#/components/parameters/XForwardedHostHeader'
        - $ref: '#/components/parameters/XApiPrefixHeader'
        - $ref: '#/components/parameters/SessionCookie'
      responses:
        '302':
          $ref: '#/components/responses/Found302'
  /auth/login/callback:
    get:
      summary: Login callback
      operationId: handler-login-callback-get
      tags:
        - auth
      parameters:
        - $ref: '#/components/parameters/redirectPathRequired'
        - $ref: '#/components/parameters/state'
        - $ref: '#/components/parameters/code'
        - $ref: '#/components/parameters/UserAgentHeader'
        - $ref: '#/components/parameters/XForwardedProtoHeader'
        - $ref: '#/components/parameters/XForwardedHostHeader'
        - $ref: '#/components/parameters/XApiPrefixHeader'
      responses:
        '302':
          $ref: '#/components/responses/Found302WithCookie'
  /auth/logout/callback:
    get:
      summary: Logout callback
      operationId: handler-logout-callback-get
      tags:
        - auth
      parameters:
        - $ref: '#/components/parameters/XForwardedProtoHeader'
        - $ref: '#/components/parameters/XForwardedHostHeader'
        - $ref: '#/components/parameters/XApiPrefixHeader'
      responses:
        '302':
          $ref: '#/components/responses/Found302'
  /auth/token/introspect:
    get:
      summary: Introspect token
      operationId: handler-token-introspect-get
      tags:
        - auth
      parameters:
        - $ref: '#/components/parameters/UserAgentHeader'
        - $ref: '#/components/parameters/SessionCookie'
      responses:
        '200':
          $ref: '#/components/responses/OK200'
        '401':
          $ref: '#/components/responses/Error401'
  /user/info:
    get:
      summary: Get user info
      operationId: handler-user-info-get
      tags:
        - auth
      parameters:
        - $ref: '#/components/parameters/XSessionHeader'
      responses:
        '200':
          $ref: '#/components/responses/UserInfo'
        '401':
          $ref: '#/components/responses/NotAuthorized401'
  /user/{id}:
    get:
      summary: Get user info by his id
      operationId: handler-user-byid-get
      tags:
        - auth
      parameters:
        - $ref: '#/components/parameters/XSessionHeader'
        - $ref: '#/components/parameters/userIdPath'
      responses:
        '200':
          $ref: '#/components/responses/UserInfo'
        '500':
          $ref: '#/components/responses/Error500'
  /user/list:
    get:
      summary: List of users
      operationId: handler-user-list-get
      tags:
        - auth
      parameters:
        - $ref: '#/components/parameters/XSessionHeader'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/searchUser'
      responses:
        '200':
          $ref: '#/components/responses/UserInfos'
        '500':
          $ref: '#/components/responses/Error500'

  /space/info:
    get:
      summary: Get space parameters info
      operationId: handler-info-get
      tags:
        - space
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
      responses:
        '200':
          $ref: '#/components/responses/SpaceParams'
        '500':
          $ref: '#/components/responses/Error500'

  /space/invitation:
    get:
      summary: Get invitations list
      operationId: handler-invitation-get
      tags:
        - space
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/spaceIdNotRequired'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/Invitations'
        '500':
          $ref: '#/components/responses/Error500'
    post:
      summary: Create invitation or link
      operationId: handler-invitation-post
      tags:
        - space
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - name: link
          in: query
          description: Link UUID
          required: false
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invitation'
        required: false
      responses:
        '201':
          $ref: '#/components/responses/Created201'
        '400':
          $ref: '#/components/responses/BadRequest400'
        '500':
          $ref: '#/components/responses/Error500'
    put:
      summary: Change role in invitation
      operationId: handler-invitation-put
      tags:
        - space
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/invitationId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationRole'
        required: true
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'
    patch:
      summary: Join space by invitation
      operationId: handler-invitation-patch
      tags:
        - space
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/invitationId'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete invitation
      operationId: handler-invitation-delete
      tags:
        - space
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/invitationId'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'

  /space/invitation/link:
    get:
      summary: Get links list
      operationId: handler-link-get
      tags:
        - space
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/spaceIdNotRequired'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/Links'
        '500':
          $ref: '#/components/responses/Error500'
    post:
      summary: Create link
      operationId: handler-link-post
      tags:
        - space
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Link'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Created201'
        '400':
          $ref: '#/components/responses/BadRequest400'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete link
      operationId: handler-link-delete
      tags:
        - space
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/linkId'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'

  /space/list:
    get:
      summary: Get spaces list
      operationId: handler-list-get
      tags:
        - space
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/Spaces'
        '500':
          $ref: '#/components/responses/Error500'

  /space/available/list:
    get:
      summary: Get spaces available to join
      operationId: handler-list-available-get
      tags:
        - space
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/spaceName'
      responses:
        '200':
          $ref: '#/components/responses/Spaces'
        '500':
          $ref: '#/components/responses/Error500'

  /space/space:
    get:
      summary: Get space
      operationId: handler-space-get
      tags:
        - space
      parameters:
      # эти параметры по отдельности не обязательные, но встречаются парами, одна из которых уже обязательна. Пары: X-User+id, X-User+key, отдельно один link.
        - name: X-User
          in: header
          description: Authorized user
          required: false
          schema:
            type: string
            format: uuid
        - name: id
          in: query
          description: Space Id
          required: false
          schema:
            type: string
            format: uuid
        - name: key
          in: query
          description: Space Key
          required: false
          schema:
            type: string
        - name: link
          in: query
          description: Link
          required: false
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/Space'
        '400':
          $ref: '#/components/responses/BadRequest400'
        '500':
          $ref: '#/components/responses/Error500'
    head:
      summary: Check space existence
      operationId: handler-space-head
      tags:
        - space
      parameters:
        - $ref: '#/components/parameters/spaceKey'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '404':
          $ref: '#/components/responses/NotFound404'
        '500':
          $ref: '#/components/responses/Error500'
    post:
      summary: Create space
      operationId: handler-space-post
      tags:
        - space
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Space'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Created201'
        '404':
          $ref: '#/components/responses/NotFound404'
        '409':
          $ref: '#/components/responses/Conflict409'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete space
      operationId: handler-space-delete
      tags:
        - space
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/idUUID'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '404':
          $ref: '#/components/responses/NotFound404'
        '500':
          $ref: '#/components/responses/Error500'

  /space/user:
    patch:
      summary: Update space user
      operationId: handler-user-manage-patch
      tags:
        - space
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '400':
          $ref: '#/components/responses/BadRequest400'
        '500':
          $ref: '#/components/responses/Error500'
    delete:
      summary: Delete space user
      operationId: handler-user-manage-delete
      tags:
        - space
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/spaceId'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '500':
          $ref: '#/components/responses/Error500'

  /space/user/list:
    get:
      summary: Get space users list
      operationId: handler-space-user-list-get
      tags:
        - space
      parameters:
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/spaceId'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/Users'
        '500':
          $ref: '#/components/responses/Error500'

  /space/introspect:
    get:
      summary: Introspect token
      operationId: handler-introspect-get
      tags:
        - space
      parameters:
        - $ref: '#/components/parameters/XOriginalURIHeader'
        - $ref: '#/components/parameters/SpaceCookie'
        - $ref: '#/components/parameters/XUserHeader'
        - $ref: '#/components/parameters/XApiPrefixHeaderRequired'
      responses:
        '204':
          $ref: '#/components/responses/NoContent204'
        '401':
          $ref: '#/components/responses/Error401'
components:
  parameters:
    projectIdRequired:
      name: projectId
      in: query
      description: projectId for filtering
      required: true
      schema:
        type: string
        format: uuid
    idBigintRequired:
      name: id
      in: query
      description: Primary identifier (int)
      required: true
      schema:
        format: int64
        type: integer
    deviceId:
      name: deviceId
      in: query
      description: Device Id
      required: true
      schema:
        type: integer
        format: int64
    sectionId:
      name: sectionId
      in: query
      description: sectionId for filtering
      required: true
      schema:
        type: integer
        format: int64
    ccId:
      name: ccId
      in: query
      description: Cc identifier
      required: true
      schema:
        type: integer
        format: int64
    diId:
      name: diId
      in: query
      description: Di identifier
      required: true
      schema:
        type: integer
        format: int64
    paramId:
      name: paramId
      in: query
      description: Param identifier
      required: true
      schema:
        type: integer
        format: int64
    ccTypeId:
      name: ccTypeId
      in: query
      description: CC Type Id
      required: true
      schema:
        type: integer
        format: int64
    diTypeId:
      name: diTypeId
      in: query
      description: Di Type Id
      required: true
      schema:
        type: integer
        format: int64
    limit:
      name: limit
      in: query
      description: How many items to return at one time (max 1000)
      required: true
      schema:
        type: integer
        maximum: 1000
        format: int32
    start:
      name: start
      in: query
      description: Offset position
      required: true
      schema:
        type: integer
        maximum: 999
        format: int32
    redirectPath:
      name: redirectPath
      in: query
      description: Redirect path
      required: false
      schema:
        type: string
    redirectPathRequired:
      name: redirectPath
      in: query
      description: Redirect path
      required: true
      schema:
        type: string
    state:
      name: state
      in: query
      description: State OIDC param
      required: true
      schema:
        type: string
    code:
      name: code
      in: query
      description: Code OIDC param
      required: true
      schema:
        type: string
    userIdPath:
      name: id
      in: path
      description: User Id path param
      schema:
        type: string
      required: true
    searchUser:
      name: search
      in: query
      description: Param for search users by login or part of it
      schema:
        type: string
      required: false
    idUUID:
      name: id
      in: query
      description: Id UUID
      required: true
      schema:
        type: string
        format: uuid
    spaceId:
      name: spaceId
      in: query
      description: Space Id
      required: true
      schema:
        type: string
        format: uuid
    spaceIdNotRequired:
      name: spaceId
      in: query
      description: Space Id
      required: false
      schema:
        type: string
        format: uuid
    spaceName:
      name: spaceName
      in: query
      description: Space Name
      required: false
      schema:
        type: string
    spaceKey:
      name: key
      in: query
      description: Space Key
      required: true
      schema:
        type: string
    invitationId:
      name: id
      in: query
      description: Invitation id
      required: true
      schema:
        type: integer
        format: int32
    linkId:
      name: id
      in: query
      description: Link id
      required: true
      schema:
        type: string
        format: uuid
    userId:
      name: userId
      in: query
      description: Space User Id
      required: true
      schema:
        type: string
    XUserHeader:
      name: X-User
      in: header
      description: Authorized user
      required: true
      schema:
        type: string
        format: uuid
    XSpaceIdHeader:
      name: X-Space-Id
      in: header
      description: Current Space Id
      required: true
      schema:
        type: string
        format: uuid
    XSpaceRoleHeader:
      name: X-Space-Role
      in: header
      description: Current Space User Role
      required: true
      schema:
        type: string
    XSessionHeader:
      name: X-Session
      in: header
      description: Session token
      required: true
      schema:
        type: string
    UserAgentHeader:
      name: User-Agent
      in: header
      description: User Agent
      required: true
      schema:
        type: string
    RefererHeader:
      name: Referer
      in: header
      description: Referer
      required: false
      schema:
        type: string
    XForwardedProtoHeader:
      name: X-Forwarded-Proto
      in: header
      description: Forwarded protocol
      required: false
      schema:
        type: string
    XForwardedHostHeader:
      name: X-Forwarded-Host
      in: header
      description: Forwarded host
      required: false
      schema:
        type: string
    XApiPrefixHeader:
      name: X-ApiPrefix
      in: header
      description: Api prefix
      required: false
      schema:
        type: string
    SessionCookie:
      name: session
      in: cookie
      description: cookie with session token
      schema:
        type: string
      required: false
    XOriginalURIHeader:
      name: X-Original-URI
      in: header
      description: URI with space key for introspection
      required: true
      schema:
        type: string
    XApiPrefixHeaderRequired:
      name: X-ApiPrefix
      in: header
      description: Api prefix
      required: true
      schema:
        type: string
    SpaceCookie:
      name: space
      in: cookie
      description: cookie with space token
      schema:
        type: string
      required: false
  schemas:
    Project:
      type: object
      required:
        - spaceId
        - key
        - name
        - sync
      properties:
        id:
          type: string
          format: uuid
        spaceId:
          type: string
          format: uuid
        key:
          type: string
          maxLength: 32
        name:
          type: string
          maxLength: 64
        description:
          type: string
        changedAt:
          type: integer
          format: int64
        sync:
          type: string
          enum:
            - projectToNode
            - nodeToProject

    Projects:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/Project'

    ProjectParam:
      type: object
      required:
        - projectId
        - paramId
      properties:
        projectId:
          type: string
          format: uuid
        paramId:
          type: integer
          format: int64

    ProjectParams:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/ProjectParam'

    CcDi:
      type: object
      required:
        - ccId
        - diId
      properties:
        ccId:
          type: integer
          format: int64
        diId:
          type: integer
          format: int64

    CcDis:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/CcDi'

    CcParam:
      type: object
      required:
        - ccId
        - paramId
      properties:
        ccId:
          type: integer
          format: int64
        paramId:
          type: integer
          format: int64

    CcParams:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/CcParam'

    CcTypeDiType:
      type: object
      required:
        - ccTypeId
        - diTypeId
      properties:
        ccTypeId:
          type: integer
          format: int64
        diTypeId:
          type: integer
          format: int64

    CcTypeDiTypes:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/CcTypeDiType'

    CcTypeParam:
      type: object
      required:
        - ccTypeId
        - paramId
      properties:
        ccTypeId:
          type: integer
          format: int64
        paramId:
          type: integer
          format: int64

    CcTypeParams:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/CcTypeParam'

    DevicePluginParam:
      type: object
      required:
        - deviceId
        - paramId
      properties:
        deviceId:
          type: integer
          format: int64
        paramId:
          type: integer
          format: int64

    DevicePluginParams:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/DevicePluginParam'

    DiPluginParam:
      type: object
      required:
        - diTypeId
        - paramId
      properties:
        diTypeId:
          type: integer
          format: int64
        paramId:
          type: integer
          format: int64

    DiPluginParams:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/DiPluginParam'

    Section:
      type: object
      required:
        - projectId
        - name
      properties:
        id:
          type: integer
          format: int64
        projectId:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 64

    Sections:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/Section'

    SectionParam:
      type: object
      required:
        - sectionId
        - paramId
      properties:
        sectionId:
          type: integer
          format: int64
        paramId:
          type: integer
          format: int64

    SectionParams:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/SectionParam'

    CcModeType:
      type: object
      required:
        - ccTypeId
        - key
        - name
      properties:
        id:
          type: integer
          format: int64
        ccTypeId:
          type: integer
          format: int64
        key:
          type: string
          maxLength: 64
        name:
          type: string
          maxLength: 64

    CcModeTypes:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/CcModeType'

    CcStatusCategory:
      type: object
      required:
        - projectId
        - key
        - name
        - color
      properties:
        id:
          type: integer
          format: int64
        projectId:
          type: string
          format: uuid
        key:
          type: string
          maxLength: 64
        name:
          type: string
          maxLength: 64
        color:
          type: string
          maxLength: 16

    CcStatusCategories:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/CcStatusCategory'

    CcStatusType:
      type: object
      required:
        - ccTypeId
        - categoryId
        - key
        - text
        - inform
      properties:
        id:
          type: integer
          format: int64
        ccTypeId:
          type: integer
          format: int64
        categoryId:
          type: integer
          format: int64
        key:
          type: string
          maxLength: 64
        text:
          type: string
          maxLength: 512
        inform:
          type: boolean

    CcStatusTypes:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/CcStatusType'

    CcType:
      type: object
      required:
        - projectId
        - key
        - name
        - description
      properties:
        id:
          type: integer
          format: int64
        projectId:
          type: string
          format: uuid
        key:
          type: string
          maxLength: 64
        name:
          type: string
          maxLength: 64
        description:
          type: string

    CcTypes:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/CcType'

    Code:
      type: object
      required:
        - projectId
        - repositoryId
        - commitHash
      properties:
        id:
          type: integer
          format: int64
        projectId:
          type: string
          format: uuid
        repositoryId:
          type: string
          format: uuid
        commitHash:
          type: string

    Codes:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/Code'

    ControlCircuit:
      type: object
      required:
        - typeId
        - sectionId
        - name
      properties:
        id:
          type: integer
          format: int64
        typeId:
          type: integer
          format: int64
        sectionId:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 64

    ControlCircuits:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/ControlCircuit'

    DeviceItem:
      type: object
      required:
        - deviceId
        - typeId
        - name
      properties:
        id:
          type: integer
          format: int64
        deviceId:
          type: integer
          format: int64
        typeId:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 64

    DeviceItems:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/DeviceItem'

    Device:
      type: object
      required:
        - projectId
        - pluginId
        - name
        - checkIntervalMsec
      properties:
        id:
          type: integer
          format: int64
        projectId:
          type: string
          format: uuid
        pluginId:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 64
        checkIntervalMsec:
          type: integer
          format: int32

    Devices:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/Device'

    DiType:
      type: object
      required:
        - measureId
        - saveTimerId
        - key
        - name
        - mode
        - saveAlgorithm
      properties:
        id:
          type: integer
          format: int64
        measureId:
          type: integer
          format: int64
        saveTimerId:
          type: integer
          format: int64
        key:
          type: string
          maxLength: 64
        name:
          type: string
          maxLength: 64
        mode:
          type: string
          enum:
            - readonlyFlag
            - readwriteFlag
            - readonly
            - readwrite
            - file
            - button
            - videoStream
        saveAlgorithm:
          type: string
          enum:
            - 'off'
            - immediately
            - byTimer
            - byTimerOrImmediately

    DiTypes:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/DiType'

    Measure:
      type: object
      required:
        - projectId
        - name
      properties:
        id:
          type: integer
          format: int64
        projectId:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 10

    Measures:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/Measure'

    Plugin:
      type: object
      required:
        - projectId
        - name
        - description
        - key
      properties:
        id:
          type: integer
          format: int64
        projectId:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 64
        description:
          type: string
        key:
          type: string
          maxLength: 128

    Plugins:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/Plugin'

    SaveTimer:
      type: object
      required:
        - projectId
        - intervalMsec
      properties:
        id:
          type: integer
          format: int64
        projectId:
          type: string
          format: uuid
        intervalMsec:
          type: integer
          format: int32

    SaveTimers:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/SaveTimer'

    Translation:
      type: object
      required:
        - projectId
        - lang
        - key
        - value
      properties:
        id:
          type: integer
          format: int64
        projectId:
          type: string
          format: uuid
        lang:
          type: string
          maxLength: 64
        key:
          type: string
          maxLength: 64
        value:
          type: string

    Translations:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/Translation'

    ValueView:
      type: object
      required:
        - diTypeId
        - value
        - view
      properties:
        id:
          type: integer
          format: int64
        diTypeId:
          type: integer
          format: int64
        value:
          type: string
        view:
          type: string

    ValueViews:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/ValueView'

    ParamType:
      type: object
      required:
        - parentId
        - key
        - name
        - description
        - valueType
      properties:
        id:
          type: integer
          format: int64
        projectId:
          type: string
          format: uuid
        parentId:
          type: string
          nullable: true
          format: uuid
        key:
          type: string
          maxLength: 64
        name:
          type: string
          maxLength: 64
        description:
          type: string
          maxLength: 512
        valueType:
          type: string
          enum:
            - int
            - bool
            - float
            - string
            - bytes
            - time
            - range
            - combo

    ParamTypes:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/ParamType'

    UserInfo:
      type: object
      required:
        - displayName
        - login
        - firstname
        - lastname
        - email
      properties:
        id:
          type: string
          format: uuid
        displayName:
          type: string
        login:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string

    UserInfos:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/UserInfo'

    Error:
      description: Common Error
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    SpaceParams:
      type: object
      required:
        - canCreate
        - invitationSize
      properties:
        canCreate:
          type: boolean
        invitationSize:
          type: integer
          format: int32

    Invitation:
      type: object
      required:
        - spaceId
        - creatorId
        - userId
        - role
        - createdAt
      properties:
        id:
          type: integer
          format: int32
        spaceId:
          type: string
          format: uuid
        creatorId:
          type: string
        userId:
          type: string
        role:
          type: string
          enum:
            - guest
            - user
            - admin
        createdAt:
          type: integer
          format: int64

    Invitations:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/Invitation'

    InvitationRole:
      type: object
      required:
        - role
      properties:
        role:
          type: string
          enum:
            - guest
            - user
            - admin

    Link:
      type: object
      required:
        - spaceId
        - creatorId
        - name
        - createdAt
        - expiredAt
      properties:
        id:
          type: string
          format: uuid
        spaceId:
          type: string
          format: uuid
        creatorId:
          type: string
        name:
          type: string
        createdAt:
          type: integer
          format: int64
        expiredAt:
          type: integer
          format: int64

    Links:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/Link'

    Space:
      type: object
      required:
        - name
        - key
        - requestsAllowed
        - createdAt
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        key:
          type: string
        requestsAllowed:
          type: boolean
        createdAt:
          type: integer
          format: int64

    Spaces:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/Space'

    User:
      type: object
      required:
        - spaceId
        - isOwner
        - joinedAt
        - role
      properties:
        userId:
          type: string
        spaceId:
          type: string
          format: uuid
        isOwner:
          type: boolean
        joinedAt:
          type: integer
          format: int64
        role:
          type: string
          enum:
            - guest
            - user
            - admin

    Users:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/User'

  responses:
    Error500:
      description: unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Error401:
      description: unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound404:
      description: unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Conflict409:
      description: unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    OK200:
      description: Successful response
    Created201:
      description: Something created
    NoContent204:
      description: Null response
    Project:
      description: A project object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Project'
    Projects:
      description: A paged array of projects
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Projects'
    ProjectParam:
      description: Project Param object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProjectParam'
    ProjectParams:
      description: A paged array of Project Params
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProjectParams'
    Section:
      description: A section object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Section'
    Sections:
      description: A paged array of value views
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sections'
    SectionParam:
      description: Section Param object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SectionParam'
    SectionParams:
      description: A paged array of Section Param
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SectionParams'
    CcModeType:
      description: A Cc Mode Type object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CcModeType'
    CcModeTypes:
      description: A paged array of CC mode types
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CcModeTypes'
    CcStatusCategory:
      description: A Cc Status Category object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CcStatusCategory'
    CcStatusCategories:
      description: A paged array of CC status categories
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CcStatusCategories'
    CcStatusType:
      description: A Cc Status Type object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CcStatusType'
    CcStatusTypes:
      description: A paged array of CC status types
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CcStatusTypes'
    CcType:
      description: A Cc Type object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CcType'
    CcTypes:
      description: A paged array of CC types
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CcTypes'
    Code:
      description: A Code object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Code'
    Codes:
      description: A paged array of codes
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Codes'
    ControlCircuit:
      description: A Control Circuit object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlCircuit'
    ControlCircuits:
      description: A paged array of control circuits
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlCircuits'
    DeviceItem:
      description: A Device Item object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeviceItem'
    DeviceItems:
      description: A paged array of device items
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeviceItems'
    Device:
      description: A Device object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Device'
    Devices:
      description: A paged array of devices
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Devices'
    DiType:
      description: A Di Type object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DiType'
    DiTypes:
      description: A paged array of Di Types
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DiTypes'
    Measure:
      description: A Measure object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Measure'
    Measures:
      description: A paged array of measures
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Measures'
    Plugin:
      description: A Plugin object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Plugin'
    Plugins:
      description: A paged array of plugins
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Plugins'
    SaveTimer:
      description: A Save Timer object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SaveTimer'
    SaveTimers:
      description: A paged array of save timers
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SaveTimers'
    Translation:
      description: A Translation object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Translation'
    Translations:
      description: A paged array of value views
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Translations'
    ValueView:
      description: A Value View object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValueView'
    ValueViews:
      description: A paged array of value views
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValueViews'
    ParamType:
      description: A param type object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ParamType'
    ParamTypes:
      description: A paged array of param types
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ParamTypes'
    CcDi:
      description: Cc Di object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CcDi'
    CcDis:
      description: A paged array of Cc Dis
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CcDis'
    CcParam:
      description: Cc Param object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CcParam'
    CcParams:
      description: A paged array of Cc Dis
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CcParams'
    CcTypeDiType:
      description: Cc Type Di Type object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CcTypeDiType'
    CcTypeDiTypes:
      description: A paged array of Cc Type Di Types
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CcTypeDiTypes'
    CcTypeParam:
      description: Cc Type Param object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CcTypeParam'
    CcTypeParams:
      description: A paged array of Cc Type Param
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CcTypeParams'
    DevicePluginParam:
      description: Device Plugin Param object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DevicePluginParam'
    DevicePluginParams:
      description: A paged array of Cc Type Param
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DevicePluginParams'
    DiPluginParam:
      description: DI Plugin Param object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DiPluginParam'
    DiPluginParams:
      description: A paged array of DI Plugin Param
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DiPluginParams'
    NotAuthorized401:
      description: not authorized error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Found302:
      description: Found response
      headers:
        Location:
          schema:
            type: string
            description: login, logout or error page url
    Found302WithCookie:
      description: Found response with cookie
      headers:
        Location:
          schema:
            type: string
            description: login page or error page url
        Set-Cookie:
          schema:
            type: string
            example: session=abcde12345; Path=/; HttpOnly; SameSite=Lax; Secure
    UserInfo:
      description: A user info object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserInfo'
    UserInfos:
      description: A paged array of projects
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserInfos'
    SpaceParams:
      description: Space parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SpaceParams'
    Invitations:
      description: Invitations list
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Invitations'
    BadRequest400:
      description: Invitations list
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Links:
      description: Links list
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Links'
    Spaces:
      description: Spaces list
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Spaces'
    Space:
      description: Space
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Space'
    Users:
      description: Space Users list
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Users'
