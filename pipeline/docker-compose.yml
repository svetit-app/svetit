version: "3.9"

services:
  web:
    container_name: svetit_web
    build:
      context: ../src/web
      dockerfile: pipeline/Dockerfile
    ports:
      - 8080:80
    extra_hosts:
      - "host.docker.internal:host-gateway" # for local testing
    restart: unless-stopped
    networks:
      - app

  db:
    container_name: svetit_db
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: ${DB_DB}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      SSO_DB: ${SSO_DB}
      SSO_USER: ${SSO_DB_USER}
      SSO_PASS: ${SSO_DB_PASS}
      APP_DB: ${APP_DB}
      APP_USER: ${APP_DB_USER}
      APP_PASS: ${APP_DB_PASS}
      AUTH_USER: ${AUTH_DB_USER}
      AUTH_PASS: ${AUTH_DB_PASS}
      SPACE_USER: ${SPACE_DB_USER}
      SPACE_PASS: ${SPACE_DB_PASS}
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./db/init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
    ports:
      - 15433:5432
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - app
      - postgres

  dbui:
    container_name: svetit_dbui
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "habrpguser@habr.com"
      PGADMIN_DEFAULT_PASSWORD: "pgadminpwd4habr"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - 5050:80
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - postgres

  sso:
    container_name: svetit_sso
    build:
      context: ./keycloak
      args:
        DB_HOST: db
        DB_USER: ${SSO_DB_USER}
        DB_PASS: ${SSO_DB_PASS}
        DB_NAME: ${SSO_DB}
        DB_SCHEMA: ${SSO_DB_USER}
    volumes:
      - ./keycloak/import:/opt/keycloak/data/import
    command:
      - start-dev
      - "--hostname-url=http://localhost:8081"
    environment:
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: ${SSO_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${SSO_ADMIN_PASS}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://db/${SSO_DB}
      KC_DB_USERNAME: ${SSO_DB_USER}
      KC_DB_PASSWORD: ${SSO_DB_PASS}
      KC_DB_SCHEMA: ${SSO_DB_USER}
    ports:
      - 8081:8080
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - app

  cpp_deps:
    build:
      context: ../src/back/deps
      x-bake:
        tags:
          - cpp_deps:latest

  auth:
    container_name: svetit_auth
    build:
      context: ../src/back/auth
      dockerfile: ../app.Dockerfile
      args:
        APP_NAME: auth
      x-bake:
        contexts:
          cpp_deps: target:cpp_deps
    volumes:
      - ../src/back/auth/configs/session.key:/app/session.key
    environment:
      AUTH_PORT: ${AUTH_PORT}
      AUTH_LOG_LEVEL: ${AUTH_LOG_LEVEL}
      AUTH_DB_URL: postgresql://${AUTH_DB_USER}:${AUTH_DB_PASS}@db/${APP_DB}
      OIDC_CLIENT_SECRET: ${OIDC_CLIENT_SECRET}
      OIDC_PROVIDER_URL: http://sso:8080/realms/svetit
      OIDC_PROVIDER_URL_ADMIN: http://sso:8080/admin/realms/svetit
      AUTH_ITEMS_LIMIT_FOR_LIST: ${AUTH_ITEMS_LIMIT_FOR_LIST}
    restart: unless-stopped
    depends_on:
      sso:
        condition: service_healthy
        restart: true
    networks:
      - app

  space:
    container_name: svetit_space
    build:
      context: ../src/back/space
      dockerfile: ../app.Dockerfile
      args:
        APP_NAME: space
      x-bake:
        contexts:
          cpp_deps: target:cpp_deps
    environment:
      SPACE_PORT: ${SPACE_PORT}
      SPACE_LOG_LEVEL: ${SPACE_LOG_LEVEL}
      SPACE_DB_URL: postgresql://${SPACE_DB_USER}:${SPACE_DB_PASS}@db/${APP_DB}
      SPACE_CAN_CREATE: ${SPACE_CAN_CREATE}
      SPACE_DEFAULT: ${SPACE_DEFAULT}
      SPACE_LIMIT_FOR_USER: ${SPACE_LIMIT_FOR_USER}
      SPACE_ITEMS_LIMIT_FOR_LIST: ${SPACE_ITEMS_LIMIT_FOR_LIST}
    restart: unless-stopped
    networks:
      - app

volumes:
  pg_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  app:
    driver: bridge
  postgres:
    driver: bridge
